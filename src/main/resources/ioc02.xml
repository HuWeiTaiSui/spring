<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--为各种属性赋值-->
    <bean id="person01" class="com.hu.bean.Person">
        <!--  lastName="null"    -->
        <property name="lastName">
            <!--进行复杂的赋值-->
            <null/>
        </property>
        <!-- ref:表示引用外边的一个值  car=ioc.getBean("car01") 引用外部bean-->
        <!-- <property name="car" ref="car01"></property>-->
        <property name="car">
            <!-- 对象我们可以使用bean标签创建 car=new Car() 引用内部bean-->
            <bean class="com.hu.bean.Car">
                <property name="carName" value="火车"></property>
            </bean>
        </property>

    </bean>
    <bean id="car01" class="com.hu.bean.Car">
        <property name="carName" value="宝马"></property>
        <property name="color" value="绿色"></property>
        <property name="price" value="300"></property>
    </bean>
    <bean id="person02" class="com.hu.bean.Person">
        <!-- 如何为list类型赋值-->
        <property name="books">
            <!-- books=new ArrayList<Book>();-->
            <list>
                <!--引用外部一个元素-->
                <ref bean="books"></ref>
                <ref bean="book02"></ref>
            </list>
        </property>
        <!--Map<String, Object> objectMap-->
        <property name="objectMap">
            <!-- map =new LinkedHashMap<>()-->
            <map>
                <!-- 一个entry代表一个键值对-->
                <entry key="1" value="张三"></entry>
                <entry key="2" value="18"></entry>
                <!--引入外部-->
                <entry key="3" value-ref="book02"></entry>
                <!-- 内部创建  -->
                <entry key="4">
                    <bean class="com.hu.bean.Book">
                        <property name="bookName" value="北游记"></property>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
    <bean id="books" class="com.hu.bean.Book">
        <property name="bookName" value="西游记"></property>
    </bean>
    <!--  abstract="true" :这个bean配置是一个抽象的，不能获取他的实例，只能被别人用来继承  -->
    <bean id="book02" class="com.hu.bean.Book" abstract="true">
        <property name="bookName" value="东游记"></property>
    </bean>
    <!--  parent:指定当前bean的配置信息继承于哪一个  -->
    <bean id="book03" parent="book02">
        <property name="bookName" value="南游记"></property>
    </bean>
</beans>