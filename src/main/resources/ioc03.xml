<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--  测试bean的作用域，分别创建单实例和多实例的bean
       bean的作用域：指定bean是否单实例，xxx;默认：单实例
       prototype:多实例；
          1.容器启动默认不会创建多实例bean
          2.获取的时候在创建这个bean
          3.每次获取都会创建一个新的对象
       singleton:单实例；默认的，
          1.在容器完成之前就已经创建好对象，保存在容器中，
          2.任何时候都是之前创建好的那个对象
    -->
    <bean id="book" class="com.hu.bean.Book" scope="singleton"></bean>
    <!--测试配置通过静态工厂方法创建的bean，实例工厂创建的bean，FactoryBean-->
    <!-- 工厂模式：工厂帮我们创建对象；有一个专门帮我们创建对象的类，这个类就是工厂
    静态工厂：工厂本身不用创建对象；通过静态方法调用，对象=工厂.方法名（）；
    实例工厂：工厂本身需要创建对象；工厂类 工厂对象=new 工厂类（）；工厂对象.getXXX("XX");

    -->
    <!--    1.静态工厂（不需要创建工厂本身）  factory-method="getAirPlane"：指定哪个方法是工厂的方法 -->
    <!--  class:指定静态工厂全类名
           factory-method：指定工厂方法
           constructor-arg:可以为方法传参
        -->
    <bean id="airStaticFactory01" class="com.hu.factory.AirStaticFactory" factory-method="getAirPlane">
        <constructor-arg value="张三"></constructor-arg>
    </bean>
    <!--    2.实例工厂使用-->
    <bean id="airInstanceFactory" class="com.hu.factory.AirInstanceFactory"></bean>
    <!-- factory-bean：指定当前对象创建使用哪个工厂
             1.先配置出实例工厂对象
             2.配置我们要创造的AirPlane对象使用哪个工厂创建
                  1）factory-bean：指定使用哪个工厂实例
                  2）factory-method：使用哪个工厂方法-->
    <bean id="airPlane01" class="com.hu.bean.AirPlane" factory-bean="airInstanceFactory" factory-method="getAirPlane">
        <constructor-arg value="sss"></constructor-arg>
    </bean>
</beans>